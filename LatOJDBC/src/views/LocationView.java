/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.LocationController;
import daos.LocationDAO;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Location;
import org.hibernate.SessionFactory;

/**
 *
 * @author AdhityaWP
 */
public class LocationView extends javax.swing.JPanel {
    List<Location> listdata = new ArrayList<Location>();
    private SessionFactory sessionFactory;
    private DefaultTableModel modelLocation = new DefaultTableModel();
    int x = 0;
    LocationDAO ldao = new LocationDAO(sessionFactory);
    LocationController lc = new LocationController(sessionFactory);

    /**
     * Creates new form LocationView
     */
    public LocationView() {
        initComponents();
        tableData(lc.getAll());
    }

    private boolean confirm() {
        if (tfId.getText().equals("")
                || tfStreet.getText().equals("")
                || tfPostal.getText().equals("")
                || tfCity.getText().equals("")
                || TfState.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Data cannot be empty !");
            return false;
        }
        return true;
    }

    private boolean isEmpty() {
        if (lc.getAll().isEmpty()) {
            return true;
        }
        return false;
    }

    private void tableData(List<models.Location> locs) {

        Object[] columnNames = {"NO", "ID", "Street Address", "Postal Code", "City", "State province", "Country"};
        Object[][] data = new Object[locs.size()][columnNames.length];

        for (int i = 0; i < data.length; i++) {
            data[i][0] = (i + 1);
            data[i][1] = locs.get(i).getId();
            data[i][2] = locs.get(i).getStreetAddress();
            data[i][3] = locs.get(i).getPostalCode();
            data[i][4] = locs.get(i).getCity();
            data[i][5] = locs.get(i).getStateProvince();
            data[i][6] = locs.get(i).getCountry().getName();
        }
        modelLocation = new DefaultTableModel(data, columnNames);
        tbLocation.setModel(modelLocation);
    }

    private void clean() {
        tfId.setEnabled(true);
        tfStreet.setText("");
        tfPostal.setText("");
        tfCity.setText("");
        TfState.setText("");
        cbCountry.setSelectedIndex(1);
    }

    void filterhuruf(KeyEvent a) {
        if (Character.isAlphabetic(a.getKeyChar())) {
            a.consume();
            JOptionPane.showMessageDialog(null, "Pada Kolom Jumlah Hanya Bisa Memasukan Karakter Angka");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jfLocation = new javax.swing.JInternalFrame();
        lblId = new javax.swing.JLabel();
        lblStreet = new javax.swing.JLabel();
        lblPostal = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        lblCountry = new javax.swing.JLabel();
        tfId = new javax.swing.JTextField();
        tfPostal = new javax.swing.JTextField();
        tfStreet = new javax.swing.JTextField();
        TfState = new javax.swing.JTextField();
        tfCity = new javax.swing.JTextField();
        btSave = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        btSearch = new javax.swing.JButton();
        spTabelLoc = new javax.swing.JScrollPane();
        tbLocation = new javax.swing.JTable();
        btReset = new javax.swing.JButton();
        cbCountry = new javax.swing.JComboBox<>();
        cbSearch = new javax.swing.JComboBox<>();

        jfLocation.setClosable(true);
        jfLocation.setVisible(true);

        lblId.setText("Location ID");

        lblStreet.setText("Street Address");

        lblPostal.setText("Postal Code");

        lblCity.setText("City");

        lblState.setText("State Province");

        lblCountry.setText("Country");

        btSave.setText("SAVE");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        btDelete.setText("DELETE");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        btSearch.setText("SEARCH");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        tbLocation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "NO", "ID", "Address", "Postal", "City", "Province", "Country"
            }
        ));
        tbLocation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbLocationMouseClicked(evt);
            }
        });
        spTabelLoc.setViewportView(tbLocation);

        btReset.setText("RESET");
        btReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResetActionPerformed(evt);
            }
        });

        cbCountry.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AR", "AU", "BE", "BR", "CA", "CH", "CN", "DE", "DK", "EG", "FR", "IL", "IN", "IT", "JP", "KW", "ML", "MX", "NG", "NL", "SG", "UK", "US", "ZM", "ZW" }));

        cbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SEARCH", "BY ID", " " }));
        cbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jfLocationLayout = new javax.swing.GroupLayout(jfLocation.getContentPane());
        jfLocation.getContentPane().setLayout(jfLocationLayout);
        jfLocationLayout.setHorizontalGroup(
            jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfLocationLayout.createSequentialGroup()
                .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spTabelLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jfLocationLayout.createSequentialGroup()
                        .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jfLocationLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(lblId)
                                .addGap(41, 41, 41))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfLocationLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblPostal)
                                    .addComponent(lblStreet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)))
                        .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfPostal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jfLocationLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jfLocationLayout.createSequentialGroup()
                                        .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCity)
                                            .addComponent(lblCountry)
                                            .addComponent(btDelete))
                                        .addGap(24, 24, 24))
                                    .addGroup(jfLocationLayout.createSequentialGroup()
                                        .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbSearch, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblState))
                                        .addGap(18, 18, 18)))
                                .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfCity, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(TfState, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(cbCountry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfLocationLayout.createSequentialGroup()
                                .addGap(218, 218, 218)
                                .addComponent(btSearch))))
                    .addComponent(btReset, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jfLocationLayout.setVerticalGroup(
            jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfLocationLayout.createSequentialGroup()
                .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jfLocationLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jfLocationLayout.createSequentialGroup()
                                    .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblId))
                                    .addGap(28, 28, 28)
                                    .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tfStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblStreet)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jfLocationLayout.createSequentialGroup()
                                    .addGap(100, 100, 100)
                                    .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tfPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblPostal))))
                            .addGroup(jfLocationLayout.createSequentialGroup()
                                .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(tfCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblCity))
                                    .addGroup(jfLocationLayout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(TfState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblState))))
                                .addGap(28, 28, 28)
                                .addComponent(cbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jfLocationLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(lblCountry)))
                .addGap(38, 38, 38)
                .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btReset)
                    .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jfLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSave)
                    .addComponent(btDelete)
                    .addComponent(btSearch))
                .addGap(18, 18, 18)
                .addComponent(spTabelLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jfLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jfLocation)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        // TODO add your handling code here:
        if (confirm()) {
            if (isEmpty()) {
                JOptionPane.showMessageDialog(null, lc.insert(
                        tfId.getText(), tfStreet.getText(),
                        tfPostal.getText(), tfCity.getText(),
                        TfState.getText(), cbCountry.getSelectedItem().toString()));
//                        fieldProvince.getText(), fieldCountry.getText()));
            } else {
                try {
                    int reply = JOptionPane.showConfirmDialog(null,
                            "Confirm your Action ?",
                            "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
                    );
                    if (reply == JOptionPane.YES_OPTION) {
                        JOptionPane.showMessageDialog(null, lc.update(
                                tfId.getText(), tfStreet.getText(),
                                tfPostal.getText(), tfCity.getText(),
                                TfState.getText(), cbCountry.getSelectedItem().toString()));
//                            fieldProvince.getText(), fieldCountry.getText()));
                        clean();
                        tableData(lc.getAll());
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            clean();
            tableData(lc.getAll());
        }

        String id = tfId.getText();
        String address = tfStreet.getText();
        String postalCode = tfPostal.getText();
        String city = tfCity.getText();
        String state = TfState.getText();
        String countryId = cbCountry.getSelectedItem().toString();
        lc.insert(id, address, postalCode, city, state, countryId);

    }//GEN-LAST:event_btSaveActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        // TODO add your handling code here:
        String id = tfId.getText();
        if (id.equals("")) {
            JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
        } else {
            try {
                int reply = JOptionPane.showConfirmDialog(null,
                        "Are You Sure ?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
                );
                if (reply == JOptionPane.YES_OPTION) {
                    JOptionPane.showMessageDialog(null, lc.delete(id));
                    clean();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        tableData(lc.getAll());

    }//GEN-LAST:event_btDeleteActionPerformed

    private void tbLocationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbLocationMouseClicked
        // TODO add your handling code here:
        tfId.setText(tbLocation.getValueAt(tbLocation.getSelectedRow(), 1).toString());
        tfStreet.setText(tbLocation.getValueAt(tbLocation.getSelectedRow(), 2).toString());
        tfPostal.setText(tbLocation.getValueAt(tbLocation.getSelectedRow(), 3).toString());
        tfCity.setText(tbLocation.getValueAt(tbLocation.getSelectedRow(), 4).toString());
        TfState.setText(String.valueOf(tbLocation.getValueAt(tbLocation.getSelectedRow(), 5)));
//        fieldCountry.setText(contentTable.getValueAt(contentTable.getSelectedRow(), 6).toString());
        cbCountry.setSelectedItem(tbLocation.getValueAt(tbLocation.getSelectedRow(), 6).toString());
        tfId.setEnabled(false);
    }//GEN-LAST:event_tbLocationMouseClicked

    private void btResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResetActionPerformed
        // TODO add your handling code here:
        clean();
        tfId.setEnabled(true);
        clean();
    }//GEN-LAST:event_btResetActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        // TODO add your handling code here:
//        String searchString = fieldId.getText();
//        String keyword = "";
//        if (searchString != "") {
//            tableData(lc.getById(""));
//        } else if (searchString != "") {
//            keyword = searchString;
//            tableData(lc.getAll(searchString));
//        } else if(fieldAddress.getText() != ""){
//            keyword = fieldAddress.getText();
//            tableData(lc.getAll(keyword));
//        } else if(fieldPostal.getText() != ""){
//            keyword = fieldPostal.getText();
//            tableData(lc.getAll(keyword));
//        } else if(fieldCity.getText() != ""){
//            keyword = fieldCity.getText();
//            tableData(lc.getAll(keyword));
//        } else if(fieldProvince.getText() != ""){
//            keyword = fieldProvince.getText();
//            tableData(lc.getAll(keyword));
//        } else {
//            tableData(lc.getAll(""));
//        }

        String id = tfId.getText();
        if (id != "" && cbSearch.getSelectedItem().equals("BY ID")) {
            tableData((List<Location>) lc.getById(id));
        } else if (id != "" && cbSearch.getSelectedItem().equals("SEARCH")) {
            tableData(lc.searchBy(id));
        } else {
            tableData(lc.getAll());
        }
    }//GEN-LAST:event_btSearchActionPerformed

    private void cbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchActionPerformed
        // TODO add your handling code here: Nothing
    }//GEN-LAST:event_cbSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TfState;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btReset;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btSearch;
    private javax.swing.JComboBox<String> cbCountry;
    private javax.swing.JComboBox<String> cbSearch;
    private javax.swing.JInternalFrame jfLocation;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblPostal;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblStreet;
    private javax.swing.JScrollPane spTabelLoc;
    private javax.swing.JTable tbLocation;
    private javax.swing.JTextField tfCity;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfPostal;
    private javax.swing.JTextField tfStreet;
    // End of variables declaration//GEN-END:variables
}
